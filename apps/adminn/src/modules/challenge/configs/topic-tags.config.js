export const topicTagOptions = [
  { id: 1, slug: 'array', name: 'Array' },
  { id: 2, slug: 'string', name: 'String' },
  { id: 3, slug: 'hash-table', name: 'Hash Table' },
  { id: 4, slug: 'dynamic-programming', name: 'Dynamic Programming' },
  { id: 5, slug: 'math', name: 'Math' },
  { id: 6, slug: 'sorting', name: 'Sorting' },
  { id: 7, slug: 'depth-first-search', name: 'Depth-First Search' },
  { id: 8, slug: 'breadth-first-search', name: 'Breadth-First Search' },
  { id: 9, slug: 'tree', name: 'Tree' },
  { id: 10, slug: 'binary-search', name: 'Binary Search' },
  { id: 11, slug: 'matrix', name: 'Matrix' },
  { id: 12, slug: 'binary-tree', name: 'Binary Tree' },
  { id: 13, slug: 'two-pointers', name: 'Two Pointers' },
  { id: 14, slug: 'bit-manipulation', name: 'Bit Manipulation' },
  { id: 15, slug: 'stack', name: 'Stack' },
  { id: 16, slug: 'backtracking', name: 'Backtracking' },
  { id: 17, slug: 'counting', name: 'Counting' },
  { id: 18, slug: 'sliding-window', name: 'Sliding Window' },
  { id: 19, slug: 'linked-list', name: 'Linked List' },
  { id: 20, slug: 'recursion', name: 'Recursion' },
  { id: 21, slug: 'monotonic-stack', name: 'Monotonic Stack' },
  { id: 22, slug: 'binary-search-tree', name: 'Binary Search Tree' },
  { id: 23, slug: 'divide-and-conquer', name: 'Divide and Conquer' },
  { id: 24, slug: 'hash-function', name: 'Hash Function' },
  { id: 25, slug: 'binary-indexed-tree', name: 'Binary Indexed Tree' },
  { id: 26, slug: 'string-matching', name: 'String Matching' },
  { id: 27, slug: 'shortest-path', name: 'Shortest Path' },
  { id: 28, slug: 'merge-sort', name: 'Merge Sort' },
  { id: 29, slug: 'doubly-linked-list', name: 'Doubly-Linked List' },
  { id: 30, slug: 'quickselect', name: 'Quickselect' },
  { id: 31, slug: 'bucket-sort', name: 'Bucket Sort' },
  { id: 32, slug: 'suffix-array', name: 'Suffix Array' },
  { id: 33, slug: 'counting-sort', name: 'Counting Sort' },
  { id: 34, slug: 'radix-sort', name: 'Radix Sort' },
  { id: 35, slug: 'greedy', name: 'Greedy' },
  { id: 36, slug: 'database', name: 'Database' },
  { id: 37, slug: 'design', name: 'Design' },
  {
    id: 38,
    slug: 'heap-priority-queue',
    name: 'Heap (Priority Queue)',
  },
  { id: 39, slug: 'graph', name: 'Graph' },
  { id: 40, slug: 'simulation', name: 'Simulation' },
  { id: 41, slug: 'prefix-sum', name: 'Prefix Sum' },
  { id: 42, slug: 'union-find', name: 'Union Find' },
  { id: 43, slug: 'ordered-set', name: 'Ordered Set' },
  { id: 44, slug: 'trie', name: 'Trie' },
  { id: 45, slug: 'bitmask', name: 'Bitmask' },
  { id: 46, slug: 'enumeration', name: 'Enumeration' },
  { id: 47, slug: 'queue', name: 'Queue' },
  { id: 48, slug: 'geometry', name: 'Geometry' },
  { id: 49, slug: 'memoization', name: 'Memoization' },
  { id: 50, slug: 'topological-sort', name: 'Topological Sort' },
  { id: 51, slug: 'segment-tree', name: 'Segment Tree' },
  { id: 52, slug: 'game-theory', name: 'Game Theory' },
  { id: 53, slug: 'interactive', name: 'Interactive' },
  { id: 54, slug: 'rolling-hash', name: 'Rolling Hash' },
  { id: 55, slug: 'data-stream', name: 'Data Stream' },
  { id: 56, slug: 'number-theory', name: 'Number Theory' },
  { id: 57, slug: 'combinatorics', name: 'Combinatorics' },
  { id: 58, slug: 'randomized', name: 'Randomized' },
  { id: 59, slug: 'monotonic-queue', name: 'Monotonic Queue' },
  { id: 60, slug: 'iterator', name: 'Iterator' },
  { id: 61, slug: 'concurrency', name: 'Concurrency' },
  { id: 62, slug: 'brainteaser', name: 'Brainteaser' },
  {
    id: 63,
    slug: 'probability-and-statistics',
    name: 'Probability and Statistics',
  },
  {
    id: 64,
    slug: 'minimum-spanning-tree',
    name: 'Minimum Spanning Tree',
  },
  { id: 65, slug: 'shell', name: 'Shell' },
  { id: 66, slug: 'line-sweep', name: 'Line Sweep' },
  { id: 67, slug: 'reservoir-sampling', name: 'Reservoir Sampling' },
  { id: 68, slug: 'eulerian-circuit', name: 'Eulerian Circuit' },
  {
    id: 69,
    slug: 'strongly-connected-component',
    name: 'Strongly Connected Component',
  },
  { id: 70, slug: 'rejection-sampling', name: 'Rejection Sampling' },
  {
    id: 71,
    slug: 'biconnected-component',
    name: 'Biconnected Component',
  },
];

// const tagwithid = topicTagOptions.map((tags, index) => ({ id: index + 1, ...tags }));
// console.log(tagwithid);
